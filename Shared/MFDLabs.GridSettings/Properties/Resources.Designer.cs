//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MFDLabs.Grid.Bot.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MFDLabs.Grid.Bot.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crash Handler failed to upload the contents of the crash..
        /// </summary>
        public static string CrashHandler_Upload_Failure {
            get {
                return ResourceManager.GetString("CrashHandler_Upload_Failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crash handler successfuly uploaded dump!.
        /// </summary>
        public static string CrashHandler_Upload_Success {
            get {
                return ResourceManager.GetString("CrashHandler_Upload_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crash Handler running....
        /// </summary>
        public static string CrashHandler_UploadRunning {
            get {
                return ResourceManager.GetString("CrashHandler_UploadRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [URGENT]: {0}.
        /// </summary>
        public static string Program_Main_BadConfiguration {
            get {
                return ResourceManager.GetString("Program_Main_BadConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [URGENT]: Unhandled global exception occurred: {0}.
        /// </summary>
        public static string Program_Main_GlobalException {
            get {
                return ResourceManager.GetString("Program_Main_GlobalException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error loading a type or dependency, please review the following error: {0}.
        /// </summary>
        public static string Program_Main_UnhandledException {
            get {
                return ResourceManager.GetString("Program_Main_UnhandledException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0:X}] &apos;{1}&apos; @ &apos;{2}&apos; [{3}@{4} ({5})].
        /// </summary>
        public static string Runner_Invoke_Title {
            get {
                return ResourceManager.GetString("Runner_Invoke_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Got SIGINT. Will start shutdown procedure within 1 second..
        /// </summary>
        public static string SignalUtility_InvokeInteruptSignal {
            get {
                return ResourceManager.GetString("SignalUtility_InvokeInteruptSignal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Got SIGUSR1. Will exit app without closing child processes (only if single instanced) with 1 second..
        /// </summary>
        public static string SignalUtility_InvokeUserSignal1 {
            get {
                return ResourceManager.GetString("SignalUtility_InvokeUserSignal1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Got SIGUSR2. Will close all child processes, and clear LocalLog within 1 second..
        /// </summary>
        public static string SignalUtility_InvokeUserSignal2 {
            get {
                return ResourceManager.GetString("SignalUtility_InvokeUserSignal2", resourceCulture);
            }
        }
    }
}
