//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Ccr.Core.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource1 {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource1() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Ccr.Core.Properties.Resource1", typeof(Resource1).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Choice has already been initialized&quot;.
        /// </summary>
        internal static string ChoiceAlreadyActiveException {
            get {
                return ResourceManager.GetString("ChoiceAlreadyActiveException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Receiver tasks in Choice can not be persisted&quot;.
        /// </summary>
        internal static string ChoiceBranchesCannotBePersisted {
            get {
                return ResourceManager.GetString("ChoiceBranchesCannotBePersisted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Test not valid when dispatcher port is using thread pool&quot;.
        /// </summary>
        internal static string DispatcherPortTestNotValidInThreadpoolMode {
            get {
                return ResourceManager.GetString("DispatcherPortTestNotValidInThreadpoolMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;ArbiterCleanup failed during exception handling for failed task&quot;.
        /// </summary>
        internal static string ExceptionDuringArbiterCleanup {
            get {
                return ResourceManager.GetString("ExceptionDuringArbiterCleanup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;n by task&quot;.
        /// </summary>
        internal static string ExceptionDuringCausalityHandling {
            get {
                return ResourceManager.GetString("ExceptionDuringCausalityHandling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;TaskExecutionWorker:HandleException&quot;.
        /// </summary>
        internal static string HandleExceptionLog {
            get {
                return ResourceManager.GetString("HandleExceptionLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&quot;nterleave can not have a Finalizer&quot;.
        /// </summary>
        internal static string InterleaveCannotHaveFinalizerException {
            get {
                return ResourceManager.GetString("InterleaveCannotHaveFinalizerException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Iterators can not yield to interleave&quot;.
        /// </summary>
        internal static string IteratorsCannotYieldToInterleaveException {
            get {
                return ResourceManager.GetString("IteratorsCannotYieldToInterleaveException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Iterators can not yield to a re-issue (!) receive&quot;.
        /// </summary>
        internal static string IteratorsCannotYieldToReissueException {
            get {
                return ResourceManager.GetString("IteratorsCannotYieldToReissueException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Duplicate port supplied to multiple-port Join&quot;.
        /// </summary>
        internal static string JoinReceiverDuplicatePortMessage {
            get {
                return ResourceManager.GetString("JoinReceiverDuplicatePortMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;You must join with at least 1 items&quot;.
        /// </summary>
        internal static string JoinSinglePortReceiverAtLeastOneItemMessage {
            get {
                return ResourceManager.GetString("JoinSinglePortReceiverAtLeastOneItemMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Joins must have at least one port&quot;.
        /// </summary>
        internal static string JoinsMustHaveOnePortMinimumException {
            get {
                return ResourceManager.GetString("JoinsMustHaveOnePortMinimumException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;An Arbiter is already registered for this thunk!&quot;.
        /// </summary>
        internal static string ReceiveThunkInvalidOperation {
            get {
                return ResourceManager.GetString("ReceiveThunkInvalidOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Task instance already has a completion handler&quot;.
        /// </summary>
        internal static string TaskAlreadyHasFinalizer {
            get {
                return ResourceManager.GetString("TaskAlreadyHasFinalizer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Receiver tasks in teardown group can not be persisted&quot;.
        /// </summary>
        internal static string TeardownBranchesCannotBePersisted {
            get {
                return ResourceManager.GetString("TeardownBranchesCannotBePersisted", resourceCulture);
            }
        }
    }
}
